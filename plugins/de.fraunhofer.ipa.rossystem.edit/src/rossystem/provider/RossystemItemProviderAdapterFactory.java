/**
 */
package rossystem.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import rossystem.util.RossystemAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RossystemItemProviderAdapterFactory extends RossystemAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RossystemItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosSystemItemProvider rosSystemItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosSystemAdapter() {
		if (rosSystemItemProvider == null) {
			rosSystemItemProvider = new RosSystemItemProvider(this);
		}

		return rosSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosNodeItemProvider rosNodeItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosNodeAdapter() {
		if (rosNodeItemProvider == null) {
			rosNodeItemProvider = new RosNodeItemProvider(this);
		}

		return rosNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosInterfaces} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosInterfacesItemProvider rosInterfacesItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosInterfaces}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosInterfacesAdapter() {
		if (rosInterfacesItemProvider == null) {
			rosInterfacesItemProvider = new RosInterfacesItemProvider(this);
		}

		return rosInterfacesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosPublisher} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosPublisherItemProvider rosPublisherItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosPublisher}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosPublisherAdapter() {
		if (rosPublisherItemProvider == null) {
			rosPublisherItemProvider = new RosPublisherItemProvider(this);
		}

		return rosPublisherItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosSubscriber} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosSubscriberItemProvider rosSubscriberItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosSubscriber}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosSubscriberAdapter() {
		if (rosSubscriberItemProvider == null) {
			rosSubscriberItemProvider = new RosSubscriberItemProvider(this);
		}

		return rosSubscriberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosServiceServer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosServiceServerItemProvider rosServiceServerItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosServiceServer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosServiceServerAdapter() {
		if (rosServiceServerItemProvider == null) {
			rosServiceServerItemProvider = new RosServiceServerItemProvider(this);
		}

		return rosServiceServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosServiceClient} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosServiceClientItemProvider rosServiceClientItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosServiceClient}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosServiceClientAdapter() {
		if (rosServiceClientItemProvider == null) {
			rosServiceClientItemProvider = new RosServiceClientItemProvider(this);
		}

		return rosServiceClientItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosActionServer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosActionServerItemProvider rosActionServerItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosActionServer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosActionServerAdapter() {
		if (rosActionServerItemProvider == null) {
			rosActionServerItemProvider = new RosActionServerItemProvider(this);
		}

		return rosActionServerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosActionClient} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosActionClientItemProvider rosActionClientItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosActionClient}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosActionClientAdapter() {
		if (rosActionClientItemProvider == null) {
			rosActionClientItemProvider = new RosActionClientItemProvider(this);
		}

		return rosActionClientItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosParameterItemProvider rosParameterItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosParameterAdapter() {
		if (rosParameterItemProvider == null) {
			rosParameterItemProvider = new RosParameterItemProvider(this);
		}

		return rosParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.Process} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessItemProvider processItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.Process}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessAdapter() {
		if (processItemProvider == null) {
			processItemProvider = new ProcessItemProvider(this);
		}

		return processItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.TopicConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopicConnectionItemProvider topicConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.TopicConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopicConnectionAdapter() {
		if (topicConnectionItemProvider == null) {
			topicConnectionItemProvider = new TopicConnectionItemProvider(this);
		}

		return topicConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.ServiceConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceConnectionItemProvider serviceConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.ServiceConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceConnectionAdapter() {
		if (serviceConnectionItemProvider == null) {
			serviceConnectionItemProvider = new ServiceConnectionItemProvider(this);
		}

		return serviceConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.ActionConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionConnectionItemProvider actionConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.ActionConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionConnectionAdapter() {
		if (actionConnectionItemProvider == null) {
			actionConnectionItemProvider = new ActionConnectionItemProvider(this);
		}

		return actionConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.Connections} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionsItemProvider connectionsItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.Connections}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionsAdapter() {
		if (connectionsItemProvider == null) {
			connectionsItemProvider = new ConnectionsItemProvider(this);
		}

		return connectionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosInterfaceItemProvider rosInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosInterfaceAdapter() {
		if (rosInterfaceItemProvider == null) {
			rosInterfaceItemProvider = new RosInterfaceItemProvider(this);
		}

		return rosInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.InterfaceReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceReferenceItemProvider interfaceReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.InterfaceReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceReferenceAdapter() {
		if (interfaceReferenceItemProvider == null) {
			interfaceReferenceItemProvider = new InterfaceReferenceItemProvider(this);
		}

		return interfaceReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosPublisherReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosPublisherReferenceItemProvider rosPublisherReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosPublisherReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosPublisherReferenceAdapter() {
		if (rosPublisherReferenceItemProvider == null) {
			rosPublisherReferenceItemProvider = new RosPublisherReferenceItemProvider(this);
		}

		return rosPublisherReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosSubscriberReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosSubscriberReferenceItemProvider rosSubscriberReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosSubscriberReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosSubscriberReferenceAdapter() {
		if (rosSubscriberReferenceItemProvider == null) {
			rosSubscriberReferenceItemProvider = new RosSubscriberReferenceItemProvider(this);
		}

		return rosSubscriberReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rossystem.RosConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RosConnectionItemProvider rosConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link rossystem.RosConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRosConnectionAdapter() {
		if (rosConnectionItemProvider == null) {
			rosConnectionItemProvider = new RosConnectionItemProvider(this);
		}

		return rosConnectionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (rosSystemItemProvider != null) rosSystemItemProvider.dispose();
		if (rosNodeItemProvider != null) rosNodeItemProvider.dispose();
		if (rosInterfacesItemProvider != null) rosInterfacesItemProvider.dispose();
		if (rosPublisherItemProvider != null) rosPublisherItemProvider.dispose();
		if (rosSubscriberItemProvider != null) rosSubscriberItemProvider.dispose();
		if (rosServiceServerItemProvider != null) rosServiceServerItemProvider.dispose();
		if (rosServiceClientItemProvider != null) rosServiceClientItemProvider.dispose();
		if (rosActionServerItemProvider != null) rosActionServerItemProvider.dispose();
		if (rosActionClientItemProvider != null) rosActionClientItemProvider.dispose();
		if (rosParameterItemProvider != null) rosParameterItemProvider.dispose();
		if (processItemProvider != null) processItemProvider.dispose();
		if (topicConnectionItemProvider != null) topicConnectionItemProvider.dispose();
		if (serviceConnectionItemProvider != null) serviceConnectionItemProvider.dispose();
		if (actionConnectionItemProvider != null) actionConnectionItemProvider.dispose();
		if (connectionsItemProvider != null) connectionsItemProvider.dispose();
		if (rosInterfaceItemProvider != null) rosInterfaceItemProvider.dispose();
		if (interfaceReferenceItemProvider != null) interfaceReferenceItemProvider.dispose();
		if (rosPublisherReferenceItemProvider != null) rosPublisherReferenceItemProvider.dispose();
		if (rosSubscriberReferenceItemProvider != null) rosSubscriberReferenceItemProvider.dispose();
		if (rosConnectionItemProvider != null) rosConnectionItemProvider.dispose();
	}

}
